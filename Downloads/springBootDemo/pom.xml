<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 	<modelVersion>4.0.0</modelVersion>
 	
	<groupId>org.com.example</groupId>
	<artifactId>springBootDemo</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>springBootDemo</name>
	<url>http://maven.apache.org</url>
	
	<properties>
        <java-version>1.7</java-version>    
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
    	<maven.compiler.target>1.7</maven.compiler.target>    	
    </properties>

	<!-- Spring Boot 启动父依赖 -->
	<!-- 将工程的parent设置为spring-boot-starter-parent，并添加对spring-boot-starter-web的依赖， 
		这样我们就无需设置各个依赖项及其版本信息了。并且在构建中要声明使用spring-boot-maven-plugin这个插件， 它会对Maven打包形成的JAR进行二次修改，最终产生符合我们要求的内容结构 -->
	<parent>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>1.5.2.RELEASE</version>
	</parent>

	<dependencies>
	<!-- Spring Boot web依赖 -->
		<dependency>
       		<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-web</artifactId>
        	<!-- 如果要打war需要添加exclusions -->
        	<!-- 如果要打war需要添加exclusions，目的是移除对嵌入式Tomcat的依赖,这样打出的WAR包中，在lib目录下才不会包含Tomcat相关的JAR包，否则将会出现启动错误 -->
			 <!-- 加上去本地报错，不加打包多3个tomcat文件报错;所有就注释掉,然后打包把3个tomcat文件删掉
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>				
				</exclusion>
			</exclusions>
		    -->		
    	</dependency>
    		<!-- 如果要打war需要添加servlet-api的依赖 -->
    		<!-- 在这里将scope属性设置为provided，这样在最终形成的WAR中不会包含这个JAR包，因为Tomcat或Jetty等服务器在运行时将会提供相关的API类。此时，执行mvn 
				package命令就会得到一个WAR文件，我们可以直接将其放到Tomcat下运行（需要7.0.42版本以上）。 -->	
		<dependency>
			  <groupId>org.apache.tomcat</groupId>
			  <artifactId>tomcat-servlet-api</artifactId>
			  <version>7.0.52</version>			
			  <scope>provided</scope>
		</dependency>
		 
    	<dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <scope>test</scope>
    	</dependency>  
    	
    	<!-- MYSQL -->
		 <dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		 </dependency>
		 <!-- Spring Boot JPA -->
		 <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		 </dependency> 	
		  <!-- Spring Boot JDBC -->
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
          </dependency>
		 
	</dependencies>
	
	<!-- Package as an executable JAR -->
	<build>
		<finalName>springBootDemo</finalName>
		<plugins>	
			<plugin> 
                <groupId>org.springframework.boot</groupId> 
                <artifactId>spring-boot-maven-plugin</artifactId> 
                <!-- 
                <executions>
		           <execution>
			       <goals>
			           <goal>repackage</goal>
			       </goals>
			       <configuration>
			           <classifier>exec</classifier>
			       </configuration>
			    </execution>
		        </executions>
		        -->
            </plugin>			 
		</plugins>
	</build>



	<!-- Allow access to Spring milestones and snapshots -->
	<!-- (you don't need this if you are using anything after 0.5.0.RELEASE) -->
	<repositories>  
        <repository>  
            <id>spring-snapshots</id>  
            <url>http://repo.spring.io/snapshot</url>  
            <snapshots>  
                <enabled>true</enabled>  
            </snapshots>  
        </repository>  
        <repository>  
            <id>spring-milestones</id>  
            <url>http://repo.spring.io/milestone</url>  
        </repository>  
    </repositories>  
    <pluginRepositories>  
        <pluginRepository>  
            <id>spring-snapshots</id>  
            <url>http://repo.spring.io/snapshot</url>  
        </pluginRepository>  
        <pluginRepository>  
            <id>spring-milestones</id>  
            <url>http://repo.spring.io/milestone</url>  
        </pluginRepository>  
    </pluginRepositories>
    
</project>
